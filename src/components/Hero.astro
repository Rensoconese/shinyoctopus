---
import HeroTitle from "./HeroTitle.astro";
import Button from "./Button.astro";
import SplineViewer from "./SplineViewer.astro";

// Configuración para el visor de Spline
const splineUrl = "https://prod.spline.design/a08ExwTmdmduVWNa/scene.splinecode";
const loadDelay = 500; // Reducido a 500ms para mejorar el rendimiento

// Estilos inline para optimizar el renderizado
const heroStyles = {
  container: `
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    height: 100svh;
    width: 100%;
    gap: 3rem;
    transform: translateY(-12dvh);
    contain: layout;
  `,
  bgSpline: `
    display: none;
    position: absolute;
    margin: 0;
    padding: 0;
    z-index: -1;
    top: 0;
    height: inherit;
    width: 100%;
  `
};

// Media query para dispositivos de escritorio
const mediaQuery = "(min-width: 64rem)";
---

<div class="hero" style={heroStyles.container}>
    <HeroTitle />
    <Button text="Contact us" href="/contact" />
    <div class="bg-spline" style={heroStyles.bgSpline}>
        <SplineViewer 
            sceneUrl={splineUrl} 
            loadDelay={loadDelay} 
            height="100%" 
            width="100%" 
        />
    </div>
</div>

<script>
  // Script para cargar el SplineViewer de manera más eficiente
  document.addEventListener('DOMContentLoaded', () => {
    const mediaQueryList = window.matchMedia('(min-width: 64rem)');
    const bgSpline = document.querySelector('.bg-spline');
    
    // Función para mostrar/ocultar el SplineViewer según el tamaño de la pantalla
    const handleMediaQueryChange = (mql: MediaQueryListEvent | MediaQueryList) => {
      if (mql.matches && bgSpline) {
        (bgSpline as HTMLElement).style.display = 'block';
      } else if (bgSpline) {
        (bgSpline as HTMLElement).style.display = 'none';
      }
    };
    
    // Aplicar inmediatamente
    handleMediaQueryChange(mediaQueryList);
    
    // Escuchar cambios en el tamaño de la pantalla
    mediaQueryList.addEventListener('change', handleMediaQueryChange);
  });
</script>

<style>
    /* Estilos de respaldo (fallback) en caso de que los estilos inline no funcionen */
    .hero {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        height: 100svh;
        width: 100%;
        gap: 3rem;
        transform: translateY(-12dvh);
        contain: layout;
        content-visibility: auto;
    }
    
    .bg-spline {
        display: none; /* Ocultar por defecto */
        position: absolute;
        margin: 0;
        padding: 0;
        z-index: -1;
        top: 0;
        height: inherit;
        width: 100%;
    }

    @media (min-width: 64rem) {
        .bg-spline {
            display: block; /* Mostrar en pantallas mayores a 64rem */
        }
    }
    
    /* Optimizaciones adicionales para mejorar el rendimiento */
    @media (prefers-reduced-motion: no-preference) {
        .hero {
            transition: opacity 0.3s ease-in;
        }
    }
</style>
