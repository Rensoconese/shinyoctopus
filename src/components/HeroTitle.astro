---
// Definir estilos inline para optimizar el LCP
const titleStyles = {
  h1: `
    text-align: center;
    font-weight: 400;
    line-height: 0.9;
    text-transform: uppercase;
    margin: 0 auto;
    font-family: var(--font-titles);
    contain: content;
    will-change: transform;
    display: block;
  `,
  span: `
    display: block;
    font-size: clamp(3rem, 10vw, 7.125rem);
    text-rendering: optimizeSpeed;
    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-font-smoothing: antialiased;
  `,
  shine: `
    text-shadow: 0 0 10px #fff, 0 0 20px #88d8ff;
    will-change: opacity;
  `
};
---

<div class="hero-title">
  <h1 style={titleStyles.h1}>
    <span class="hero-text" style={titleStyles.span}>we make</span>
    <span class="hero-text" style={titleStyles.span}>your website</span>
    <span class="hero-text" style={`${titleStyles.span} ${titleStyles.shine}`}>shine</span>
  </h1>
</div>

<style>
  /* Mantener algunos estilos en el CSS para dispositivos que no soportan estilos inline */
  .hero-title {
    display: block;
    width: 100%;
    contain: layout;
    content-visibility: auto;
  }
  
  /* Fallback styles (solo se aplicar√°n si los estilos inline fallan) */
  h1 {
    text-align: center;
    font-weight: 400;
    line-height: 0.9;
    text-transform: uppercase;
    margin: 0 auto;
    font-family: var(--font-titles);
  }

  .hero-text {
    display: block;
    font-size: clamp(3rem, 10vw, 7.125rem);
    text-rendering: optimizeSpeed;
    transform: translateZ(0);
  }

  .shine {
    text-shadow: 0 0 10px #fff, 0 0 20px #88d8ff;
  }
</style>
